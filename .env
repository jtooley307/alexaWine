# Local Wine Database Fallback
WINE_DATABASE_PATH=wineDatabase.json

# Wine.com API Configuration
WINE_API_KEY=your_wine_api_key_here
WINE_API_BASE_URL=https://services.wine.com/api/beta2/service.svc/JSON

# Alexa Skill Configuration
ALEXA_SKILL_ID=amzn1.ask.skill.db86c0db-cfb9-426f-99c5-dfc8406bd56f

# AWS Configuration (do not set static creds here; use AWS CLI/SSO or env)
# AWS_ACCESS_KEY_ID=
# AWS_SECRET_ACCESS_KEY=
AWS_REGION=us-west-2

# Logging Configuration
LOG_LEVEL=info

# DynamoDB Configuration
DYNAMODB_TABLE_PREFIX=wine_skill_

# X-Wines Configuration
XWINES_DATASET_VERSION=test
USE_LOCAL_VECTOR_SEARCH=false

# OpenSearch (Vector DB)
OPENSEARCH_ENDPOINT=https://search-x-wines-dev-5s3fgf7s5pxpuzztpnjqss5gbq.us-west-2.es.amazonaws.com
OPENSEARCH_REGION=${AWS_REGION}
OPENSEARCH_INDEX=xwines_1024
OPENSEARCH_USE_IAM=false
OPENSEARCH_USERNAME=ingest
OPENSEARCH_PASSWORD=nomsaw-0xYfvo-jeqzin
USE_OPENSEARCH=true
USE_VECTOR_SEARCH=true
USE_HYBRID_SEARCH=false

# Vector embeddings
# For prod (Lambda), use Bedrock. For local dev, set EMBED_PROVIDER=ollama and run a local server.
EMBED_PROVIDER=bedrock
EMBED_DIM=1024
OLLAMA_BASE_URL=http://localhost:11434
OLLAMA_EMBED_MODEL=nomic-embed-text

# Bedrock (query-time embeddings - Option A)
BEDROCK_REGION=${AWS_REGION}
BEDROCK_EMBEDDING_MODEL_ID=amazon.titan-embed-text-v2:0

# Bedrock NLG for natural responses
USE_BEDROCK_NLG=true
# Default Titan text model; override if needed
BEDROCK_TEXT_MODEL_ID=amazon.titan-text-lite-v1
